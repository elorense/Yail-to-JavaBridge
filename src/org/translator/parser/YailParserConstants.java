/* Generated By:JavaCC: Do not edit this line. YailParserConstants.java */
//AppComponent, has hashmap of String, String; key: method, value: actual value of method.
//ArrayList<CodeBlock> ?? 

package org.translator.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface YailParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ABS = 6;
  /** RegularExpression Id. */
  int ACOS = 7;
  /** RegularExpression Id. */
  int ADDCOMP = 8;
  /** RegularExpression Id. */
  int APOS = 9;
  /** RegularExpression Id. */
  int ASIN = 10;
  /** RegularExpression Id. */
  int ATAN = 11;
  /** RegularExpression Id. */
  int ATAN2 = 12;
  /** RegularExpression Id. */
  int BEGIN = 13;
  /** RegularExpression Id. */
  int CALLCOMP = 14;
  /** RegularExpression Id. */
  int CALLPRIM = 15;
  /** RegularExpression Id. */
  int CEILING = 16;
  /** RegularExpression Id. */
  int CLOSESCREEN = 17;
  /** RegularExpression Id. */
  int CLOSEAPP = 18;
  /** RegularExpression Id. */
  int CLOSESCREENPLAINTEXT = 19;
  /** RegularExpression Id. */
  int CLOSESCREENWITHVALUE = 20;
  /** RegularExpression Id. */
  int COLORVAL = 21;
  /** RegularExpression Id. */
  int DECIMALVAL = 22;
  /** RegularExpression Id. */
  int CONVDEGTORADI = 23;
  /** RegularExpression Id. */
  int CONVRADITODEG = 24;
  /** RegularExpression Id. */
  int COS = 25;
  /** RegularExpression Id. */
  int DEF = 26;
  /** RegularExpression Id. */
  int DEFINEEVENT = 27;
  /** RegularExpression Id. */
  int DEFINEFORM = 28;
  /** RegularExpression Id. */
  int DIVIDE = 29;
  /** RegularExpression Id. */
  int DOAFTERFORM = 30;
  /** RegularExpression Id. */
  int EXP = 31;
  /** RegularExpression Id. */
  int EXPT = 32;
  /** RegularExpression Id. */
  int EQUAL = 33;
  /** RegularExpression Id. */
  int FLOOR = 34;
  /** RegularExpression Id. */
  int FOREACH = 35;
  /** RegularExpression Id. */
  int FORMATASDEC = 36;
  /** RegularExpression Id. */
  int FORMNAME = 37;
  /** RegularExpression Id. */
  int FORRANGE = 38;
  /** RegularExpression Id. */
  int FSLASH = 39;
  /** RegularExpression Id. */
  int GETPROP = 40;
  /** RegularExpression Id. */
  int GETPLAINSTARTTEXT = 41;
  /** RegularExpression Id. */
  int GETSTARTVALUE = 42;
  /** RegularExpression Id. */
  int GETVAR = 43;
  /** RegularExpression Id. */
  int GREATER = 44;
  /** RegularExpression Id. */
  int IF = 45;
  /** RegularExpression Id. */
  int INITRUN = 46;
  /** RegularExpression Id. */
  int ISANUM = 47;
  /** RegularExpression Id. */
  int LESS = 48;
  /** RegularExpression Id. */
  int LEXVAL = 49;
  /** RegularExpression Id. */
  int LIST = 50;
  /** RegularExpression Id. */
  int LISTFORRUNTIME = 51;
  /** RegularExpression Id. */
  int LISTINIT = 52;
  /** RegularExpression Id. */
  int LPAREN = 53;
  /** RegularExpression Id. */
  int LOG = 54;
  /** RegularExpression Id. */
  int MAKELIST = 55;
  /** RegularExpression Id. */
  int MAX = 56;
  /** RegularExpression Id. */
  int MIN = 57;
  /** RegularExpression Id. */
  int MINUS = 58;
  /** RegularExpression Id. */
  int MOD = 59;
  /** RegularExpression Id. */
  int MULTIPLY = 60;
  /** RegularExpression Id. */
  int OPENANOTHERSCREEN = 61;
  /** RegularExpression Id. */
  int OPENANOTHERSCREENWITHVALUE = 62;
  /** RegularExpression Id. */
  int PACKAGE = 63;
  /** RegularExpression Id. */
  int PLUS = 64;
  /** RegularExpression Id. */
  int PROPTYPE = 65;
  /** RegularExpression Id. */
  int PROPNAME = 66;
  /** RegularExpression Id. */
  int QUOTE = 67;
  /** RegularExpression Id. */
  int QUOTIENT = 68;
  /** RegularExpression Id. */
  int RANDFRAC = 69;
  /** RegularExpression Id. */
  int RANDINT = 70;
  /** RegularExpression Id. */
  int RANDOMSETSEED = 71;
  /** RegularExpression Id. */
  int REMAINDER = 72;
  /** RegularExpression Id. */
  int REQUIRE = 73;
  /** RegularExpression Id. */
  int ROUND = 74;
  /** RegularExpression Id. */
  int RPAREN = 75;
  /** RegularExpression Id. */
  int RUNTIMEVAL = 76;
  /** RegularExpression Id. */
  int SETPROP = 77;
  /** RegularExpression Id. */
  int SETTHISFORM = 78;
  /** RegularExpression Id. */
  int SETVAR = 79;
  /** RegularExpression Id. */
  int SIN = 80;
  /** RegularExpression Id. */
  int SQUAREROOT = 81;
  /** RegularExpression Id. */
  int STRAPPEND = 82;
  /** RegularExpression Id. */
  int STRCONTAINS = 83;
  /** RegularExpression Id. */
  int STREMPTY = 84;
  /** RegularExpression Id. */
  int STRGREATER = 85;
  /** RegularExpression Id. */
  int STRLEN = 86;
  /** RegularExpression Id. */
  int STRLESS = 87;
  /** RegularExpression Id. */
  int STRREPLACEALL = 88;
  /** RegularExpression Id. */
  int STRSPLIT = 89;
  /** RegularExpression Id. */
  int STRSPLITANY = 90;
  /** RegularExpression Id. */
  int STRSPLITFIRST = 91;
  /** RegularExpression Id. */
  int STRSPLITFIRSTANY = 92;
  /** RegularExpression Id. */
  int STRSPLITSPACES = 93;
  /** RegularExpression Id. */
  int STRSTARTAT = 94;
  /** RegularExpression Id. */
  int STRSUBSTRING = 95;
  /** RegularExpression Id. */
  int STRTOLOWER = 96;
  /** RegularExpression Id. */
  int STRTOUPPER = 97;
  /** RegularExpression Id. */
  int STRTRIM = 98;
  /** RegularExpression Id. */
  int TAN = 99;
  /** RegularExpression Id. */
  int TRIPLE = 100;
  /** RegularExpression Id. */
  int TRUE = 101;
  /** RegularExpression Id. */
  int WHILE = 102;
  /** RegularExpression Id. */
  int YAILADDTOLIST = 103;
  /** RegularExpression Id. */
  int YAILEQUAL = 104;
  /** RegularExpression Id. */
  int YAILGETITEM = 105;
  /** RegularExpression Id. */
  int YAILISALIST = 106;
  /** RegularExpression Id. */
  int YAILLISTAPPEND = 107;
  /** RegularExpression Id. */
  int YAILLISTCOPY = 108;
  /** RegularExpression Id. */
  int YAILLISTINSERT = 109;
  /** RegularExpression Id. */
  int YAILLISTLENGTH = 110;
  /** RegularExpression Id. */
  int YAILLISTMEMBER = 111;
  /** RegularExpression Id. */
  int YAILLISTREMOVE = 112;
  /** RegularExpression Id. */
  int YAILLISTFROMCSVROW = 113;
  /** RegularExpression Id. */
  int YAILLISTFROMCSVTABLE = 114;
  /** RegularExpression Id. */
  int YAILLISTINDEX = 115;
  /** RegularExpression Id. */
  int YAILLISTRANDOM = 116;
  /** RegularExpression Id. */
  int YAILLISTSETITEM = 117;
  /** RegularExpression Id. */
  int YAILLISTTOCSVROW = 118;
  /** RegularExpression Id. */
  int YAILLISTTOCSVTABLE = 119;
  /** RegularExpression Id. */
  int COMPNAME = 120;
  /** RegularExpression Id. */
  int ANYTEXT = 121;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_DECL = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "<token of kind 5>",
    "\"abs\"",
    "\"acos-degrees\"",
    "\"add-component\"",
    "\"\\\'\"",
    "\"asin-degrees\"",
    "\"atan-degrees\"",
    "\"atan2-degrees\"",
    "\"begin\"",
    "\"call-component-method\"",
    "\"call-yail-primitive\"",
    "\"yail-ceiling\"",
    "\"close-screen\"",
    "\"close-application\"",
    "\"close-screen-with-plain-text\"",
    "\"close-screen-with-value\"",
    "<COLORVAL>",
    "<DECIMALVAL>",
    "\"degrees->radians\"",
    "\"radians->degrees\"",
    "\"cos-degrees\"",
    "\"def\"",
    "\"define-event\"",
    "\"define-form\"",
    "\"yail-divide\"",
    "\"do-after-form-creation\"",
    "\"exp\"",
    "\"expt\"",
    "\"=\"",
    "\"yail-floor\"",
    "\"foreach\"",
    "\"format-as-decimal\"",
    "<FORMNAME>",
    "\"forrange\"",
    "\"\\\\\"",
    "\"get-property\"",
    "\"get-plain-start-text\"",
    "\"get-start-value\"",
    "\"get-var\"",
    "\">\"",
    "\"if\"",
    "\"init-runtime\"",
    "\"is-number?\"",
    "\"<\"",
    "\"lexical-value\"",
    "\"list\"",
    "\"*list-for-runtime*\"",
    "\"\\\"make a list\\\"\"",
    "\"(\"",
    "\"log\"",
    "\"make-yail-list\"",
    "\"max\"",
    "\"min\"",
    "\"-\"",
    "\"modulo\"",
    "\"*\"",
    "\"open-another-screen\"",
    "\"open-another-screen-with-start-value\"",
    "\"<com.google.youngandroid.runtime>\"",
    "\"+\"",
    "<PROPTYPE>",
    "<PROPNAME>",
    "\"\\\"\"",
    "\"quotient\"",
    "\"random-fraction\"",
    "\"random-integer\"",
    "\"random-set-seed\"",
    "\"remainder\"",
    "\"require\"",
    "\"yail-round\"",
    "\")\"",
    "\"#f\"",
    "\"set-and-coerce-property!\"",
    "\"set-this-form\"",
    "\"set-var!\"",
    "\"sin-degrees\"",
    "\"sqrt\"",
    "\"string-append\"",
    "\"string-contains\"",
    "\"string-empty?\"",
    "\"string>?\"",
    "\"string-length\"",
    "\"string<?\"",
    "\"string-replace-all\"",
    "\"string-split\"",
    "\"string-split-at-any\"",
    "\"string-split-at-first\"",
    "\"string-split-at-first-of-any\"",
    "\"string-split-at-spaces\"",
    "\"string-starts-at\"",
    "\"string-substring\"",
    "\"string-to-lower-case\"",
    "\"string-to-upper-case\"",
    "\"string-trim\"",
    "\"tan-degrees\"",
    "\";;;\"",
    "\"#t\"",
    "\"while\"",
    "\"yail-list-add-to-list!\"",
    "\"yail-equal?\"",
    "\"yail-list-get-item\"",
    "\"yail-list?\"",
    "\"yail-list-append!\"",
    "\"yail-list-copy\"",
    "\"yail-list-insert-item!\"",
    "\"yail-list-length\"",
    "\"yail-list-member?\"",
    "\"yail-list-remove-item!\"",
    "\"yail-list-from-csv-row\"",
    "\"yail-list-from-csv-table\"",
    "\"yail-list-index\"",
    "\"yail-list-pick-random\"",
    "\"yail-list-set-item!\"",
    "\"yail-list-to-csv-row\"",
    "\"yail-list-to-csv-table\"",
    "<COMPNAME>",
    "<ANYTEXT>",
    "\"#|\"",
    "<token of kind 123>",
    "\"|#\"",
  };

}
